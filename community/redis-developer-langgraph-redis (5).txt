Directory structure:
â””â”€â”€ create-react-agent-memory.ipynb

================================================
FILE: examples/create-react-agent-memory.ipynb
================================================
# Jupyter notebook converted to Python script.

"""
# How to add thread-level memory to a ReAct Agent

<div class="admonition tip">
    <p class="admonition-title">Prerequisites</p>
    <p>
        This guide assumes familiarity with the following:
        <ul>
            <li>            
                <a href="https://langchain-ai.github.io/langgraph/concepts/persistence/">
                    LangGraph Persistence
                </a>
            </li>
            <li>            
                <a href="https://langchain-ai.github.io/langgraph/concepts/persistence/#checkpointer-interface">
                    Checkpointer interface
                </a>
            </li>
            <li>
                <a href="https://langchain-ai.github.io/langgraph/concepts/agentic_concepts/">
                    Agent Architectures
                </a>                   
            </li>
            <li>
                <a href="https://python.langchain.com/docs/concepts/chat_models/">
                    Chat Models
                </a>
            </li>
            <li>
                <a href="https://python.langchain.com/docs/concepts/tools/">
                    Tools
                </a>
            </li>
        </ul>
    </p>
</div> 

This guide will show how to add memory to the prebuilt ReAct agent. Please see [this tutorial](../create-react-agent) for how to get started with the prebuilt ReAct agent

We can add memory to the agent, by passing a [checkpointer](https://langchain-ai.github.io/langgraph/reference/checkpoints/) to the [create_react_agent](https://langchain-ai.github.io/langgraph/reference/prebuilt/#langgraph.prebuilt.chat_agent_executor.create_react_agent) function.
"""

"""
## Setup

First, let's install the required packages and set our API keys
"""

%%capture --no-stderr
%pip install -U langgraph langchain-openai

import getpass
import os


def _set_env(var: str):
    if not os.environ.get(var):
        os.environ[var] = getpass.getpass(f"{var}: ")


_set_env("OPENAI_API_KEY")
# Output:
#   OPENAI_API_KEY:  Â·Â·Â·Â·Â·Â·Â·Â·


"""
<div class="admonition tip">
    <p class="admonition-title">Set up <a href="https://smith.langchain.com">LangSmith</a> for LangGraph development</p>
    <p style="padding-top: 5px;">
        Sign up for LangSmith to quickly spot issues and improve the performance of your LangGraph projects. LangSmith lets you use trace data to debug, test, and monitor your LLM apps built with LangGraph â€” read more about how to get started <a href="https://docs.smith.langchain.com">here</a>. 
    </p>
</div>
"""

"""
## Code
"""

# First we initialize the model we want to use.
from langchain_openai import ChatOpenAI

model = ChatOpenAI(model="gpt-4o", temperature=0)


# For this tutorial we will use custom tool that returns pre-defined values for weather in two cities (NYC & SF)

from langchain_core.tools import tool


@tool
def get_weather(location: str) -> str:
    """Use this to get weather information."""
    if any([city in location.lower() for city in ["nyc", "new york city"]]):
        return "It might be cloudy in nyc"
    elif any([city in location.lower() for city in ["sf", "san francisco"]]):
        return "It's always sunny in sf"
    else:
        return f"I am not sure what the weather is in {location}"


tools = [get_weather]

# We can add "chat memory" to the graph with LangGraph's Redis checkpointer
# to retain the chat context between interactions
from langgraph.checkpoint.redis import RedisSaver

# Set up Redis connection
REDIS_URI = "redis://redis:6379"
memory = None
with RedisSaver.from_conn_string(REDIS_URI) as cp:
    cp.setup()
    memory = cp

# Define the graph

from langgraph.prebuilt import create_react_agent

graph = create_react_agent(model, tools=tools, checkpointer=memory)

"""
## Usage

Let's interact with it multiple times to show that it can remember
"""

def print_stream(stream):
    for s in stream:
        message = s["messages"][-1]
        if isinstance(message, tuple):
            print(message)
        else:
            message.pretty_print()

config = {"configurable": {"thread_id": "1"}}
inputs = {"messages": [("user", "What's the weather in NYC?")]}

print_stream(graph.stream(inputs, config=config, stream_mode="values"))
# Output:
#   ================================[1m Human Message [0m=================================

#   

#   What's the weather in NYC?

#   ==================================[1m Ai Message [0m==================================

#   Tool Calls:

#     get_weather (call_1aAbFecdc3xn5yLVkOBScflI)

#    Call ID: call_1aAbFecdc3xn5yLVkOBScflI

#     Args:

#       location: New York City

#   =================================[1m Tool Message [0m=================================

#   Name: get_weather

#   

#   It might be cloudy in nyc

#   ==================================[1m Ai Message [0m==================================

#   

#   The weather in New York City might be cloudy.


"""
Notice that when we pass the same thread ID, the chat history is preserved.
"""

inputs = {"messages": [("user", "What's it known for?")]}
print_stream(graph.stream(inputs, config=config, stream_mode="values"))
# Output:
#   ================================[1m Human Message [0m=================================

#   

#   What's it known for?

#   ==================================[1m Ai Message [0m==================================

#   

#   New York City is known for many things, including:

#   

#   1. **Landmarks and Attractions**: The Statue of Liberty, Times Square, Central Park, Empire State Building, and Broadway theaters.

#      

#   2. **Cultural Diversity**: NYC is a melting pot of cultures, with a rich tapestry of ethnic neighborhoods like Chinatown, Little Italy, and Harlem.

#   

#   3. **Financial Hub**: Home to Wall Street and the New York Stock Exchange, it's a global financial center.

#   

#   4. **Arts and Entertainment**: Renowned for its museums (e.g., The Metropolitan Museum of Art, MoMA), music venues, and vibrant arts scene.

#   

#   5. **Cuisine**: Famous for its diverse food offerings, including New York-style pizza, bagels, and international cuisines.

#   

#   6. **Fashion**: A major fashion capital, hosting New York Fashion Week and home to numerous designers and fashion houses.

#   

#   7. **Media and Publishing**: Headquarters for major media companies and publishers, including The New York Times and NBC.

#   

#   8. **Skyscrapers**: Known for its iconic skyline, featuring numerous skyscrapers.

#   

#   9. **Public Transportation**: An extensive subway system and iconic yellow taxis.

#   

#   10. **Sports**: Home to major sports teams like the New York Yankees, Mets, Knicks, and Giants.

#   

#   These are just a few highlights of what makes New York City a unique and vibrant place.



